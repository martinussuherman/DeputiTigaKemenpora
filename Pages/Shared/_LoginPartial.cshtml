@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using DeputiTigaKemenpora.Identity
@using Itm.Identity
@inject IAuthorizationService AuthorizationService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a asp-area="Identity" 
            asp-page="/Account/Manage/ChangePassword" 
            class="nav-link btn btn-link text-dark">
            @User.Identity.Name
        </a>
    </li>

    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.All)).Succeeded)
    {
        <li class="nav-item">
            <a asp-area="Identity" 
                asp-page="/Account/Index" 
                class="nav-link btn btn-link text-dark">
                Daftar User
            </a>
        </li>
    }

    <li class="nav-item">
        <form class="form-inline" 
            asp-area="Identity" 
            asp-page="/Account/Logout" 
            asp-route-returnUrl="@Url.Page("/", new { area = "" })" 
            method="post" >
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
